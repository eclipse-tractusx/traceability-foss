{
    "openapi": "3.0.1",
    "info": {
        "title": "Tractus-X Traceability Foss",
        "description": "Trace-FOSS is a system for tracking parts along the supply chain. A high level of transparency across the supplier network enables faster intervention based on a recorded event in the supply chain. This saves costs by seamlessly tracking parts and creates trust through clearly defined and secure data access by the companies and persons involved in the process.",
        "license": {
            "name": "License: Apache 2.0"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:9998/api",
            "description": "Generated server url"
        }
    ],
    "security": [
        {
            "oAuth2": [
                "profile email"
            ]
        }
    ],
    "paths": {
        "/policies": {
            "get": {
                "tags": [
                    "Policies"
                ],
                "summary": "Get all policies ",
                "description": "The endpoint returns all policies .",
                "operationId": "policy",
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the policies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IrsPolicyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "Policies"
                ],
                "summary": "Updates policies ",
                "description": "The endpoint updates policies.",
                "operationId": "updatePolicy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePolicyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Update successful",
                        "content": {
                            "application/json": {
                                
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Policies"
                ],
                "summary": "Create a policy ",
                "description": "The endpoint creates a policy.",
                "operationId": "createPolicy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterPolicyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the policies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePolicyResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/notifications/{notificationId}/edit": {
            "put": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Update notification by id",
                "description": "The endpoint updates notification by their id.",
                "operationId": "updateNotification",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditNotificationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content."
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/bpn-config": {
            "get": {
                "tags": [
                    "BpnEdcMapping"
                ],
                "summary": "Get BPN EDC URL mappings",
                "description": "The endpoint returns a result of BPN EDC URL mappings.",
                "operationId": "getBpnEdcs",
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the paged result found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BpnEdcMappingResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "BpnEdcMapping"
                ],
                "summary": "Updates BPN EDC URL mappings",
                "description": "The endpoint updates BPN EDC URL mappings",
                "operationId": "updateBpnEdcMappings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "maxItems": 1000,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BpnMappingRequest"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the paged result found for BpnEdcMapping",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BpnEdcMappingResponse"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "BpnEdcMapping"
                ],
                "summary": "Creates BPN EDC URL mappings",
                "description": "The endpoint creates BPN EDC URL mappings",
                "operationId": "createBpnEdcUrlMappings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "maxItems": 1000,
                                "minItems": 0,
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BpnMappingRequest"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the paged result found for BpnEdcMapping",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BpnEdcMappingResponse"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/submodel/data/{submodelId}": {
            "get": {
                "tags": [
                    "Submodel"
                ],
                "summary": "Gets Submodel by its id",
                "description": "The endpoint returns Submodel for given id. Used for data providing functionality",
                "operationId": "getSubmodelById",
                "parameters": [
                    {
                        "name": "submodelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns submodel payload",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            },
            "post": {
                "tags": [
                    "Submodel"
                ],
                "summary": "Save Submodel",
                "description": "This endpoint allows you to save a Submodel identified by its ID.",
                "operationId": "saveSubmodel",
                "parameters": [
                    {
                        "name": "submodelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Ok."
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content."
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/notifications": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Start notification by part ids",
                "description": "The endpoint starts notification based on part ids provided.",
                "operationId": "notifyAssets",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartNotificationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotificationIdResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/notifications/{notificationId}/update": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Update notification by id",
                "description": "The endpoint updates notification by their id.",
                "operationId": "updateNotification_1",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateNotificationStatusTransitionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content."
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/notifications/{notificationId}/close": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Close notification by id",
                "description": "The endpoint closes Notification by id.",
                "operationId": "closeNotification",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CloseNotificationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Ok."
                    },
                    "204": {
                        "description": "No content."
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/notifications/{notificationId}/cancel": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Cancels notification by id",
                "description": "The endpoint cancels notification by id.",
                "operationId": "cancelNotification",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Ok."
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content."
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/notifications/{notificationId}/approve": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Approves notification by id",
                "description": "The endpoint approves notification by id.",
                "operationId": "approveNotification",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Ok."
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content."
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/notifications/searchable-values": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "searchable-values",
                "description": "The endpoint returns searchable values for given fieldName.",
                "operationId": "searchable-values",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchableNotificationsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns searchable values for given fieldName.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/notifications/filter": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Filter notifications defined by the request body",
                "description": "The endpoint returns notifications as paged result.",
                "operationId": "filterNotifications",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageableFilterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Returns the paged result found for Notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "type": "array",
                                    "description": "Notifications",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "maximum": 255,
                                                "minimum": 0,
                                                "maxLength": 255,
                                                "type": "integer",
                                                "format": "int64",
                                                "example": 66
                                            },
                                            "title": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Title"
                                            },
                                            "status": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "CREATED",
                                                "enum": [
                                                    "CREATED",
                                                    "SENT",
                                                    "RECEIVED",
                                                    "ACKNOWLEDGED",
                                                    "ACCEPTED",
                                                    "DECLINED",
                                                    "CANCELED",
                                                    "CLOSED"
                                                ]
                                            },
                                            "description": {
                                                "maxLength": 1000,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "DescriptionText"
                                            },
                                            "createdBy": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "BPNL00000003AYRE"
                                            },
                                            "createdByName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "createdDate": {
                                                "maxLength": 50,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "2023-02-21T21:27:10.734950Z"
                                            },
                                            "updatedDate": {
                                                "maxLength": 50,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "2023-02-21T21:27:10.734950Z"
                                            },
                                            "assetIds": {
                                                "maxItems": 1000,
                                                "minItems": 0,
                                                "type": "array",
                                                "example": [
                                                    "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd",
                                                    "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70529fcbd",
                                                    "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70530fcbd"
                                                ],
                                                "items": {
                                                    "type": "string",
                                                    "example": "[\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd\",\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70529fcbd\",\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70530fcbd\"]"
                                                }
                                            },
                                            "channel": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "SENDER",
                                                "enum": [
                                                    "SENDER",
                                                    "RECEIVER"
                                                ]
                                            },
                                            "sendTo": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "BPNL00000003AYRE"
                                            },
                                            "sendToName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "severity": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "MINOR",
                                                "enum": [
                                                    "MINOR",
                                                    "MAJOR",
                                                    "CRITICAL",
                                                    "LIFE-THREATENING"
                                                ]
                                            },
                                            "type": {
                                                "maxLength": 50,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "ALERT",
                                                "enum": [
                                                    "ALERT",
                                                    "INVESTIGATION"
                                                ]
                                            },
                                            "targetDate": {
                                                "maxLength": 50,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "2099-02-21T21:27:10.734950Z"
                                            },
                                            "messages": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/NotificationMessageResponse"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/edc/notification/contract": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Triggers EDC notification contract",
                "description": "The endpoint Triggers EDC notification contract based on notification type and method",
                "operationId": "createNotificationContract",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateNotificationContractRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateNotificationContractResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/contracts": {
            "post": {
                "tags": [
                    "Contracts"
                ],
                "summary": "All contract agreements for all assets",
                "description": "This endpoint returns all contract agreements for all assets in Trace-X",
                "operationId": "contracts",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageableFilterRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": {
                                        "message": "Internal server error."
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": {
                                        "message": "Bad request."
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": {
                                        "message": "Authorization failed."
                                    }
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "minItems": 0,
                                    "type": "array",
                                    "description": "PageResults",
                                    "items": {
                                        "$ref": "#/components/schemas/PageResultContractResponse"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": {
                                        "message": "Too many requests."
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": {
                                        "message": "Forbidden."
                                    }
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": {
                                        "message": "Unsupported media type."
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "example": {
                                        "message": "Not found."
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/publish": {
            "post": {
                "tags": [
                    "AssetsImport",
                    "AssetsPublish"
                ],
                "summary": "asset publish",
                "description": "This endpoint publishes assets to the Catena-X network.",
                "operationId": "publishAssets",
                "parameters": [
                    {
                        "name": "triggerSynchronizeAssets",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterAssetRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content."
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK.",
                        "content": {
                            "application/json": {
                                
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/import": {
            "post": {
                "tags": [
                    "AssetsImport"
                ],
                "summary": "asset upload",
                "description": "This endpoint stores assets in the application. Those can be later published in the Catena-X network.",
                "operationId": "importJson",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content."
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-planned/sync": {
            "post": {
                "tags": [
                    "AssetsAsPlanned"
                ],
                "summary": "Synchronizes assets from IRS",
                "description": "The endpoint synchronizes the assets from irs.",
                "operationId": "sync",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncAssetsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created."
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-planned/searchable-values": {
            "post": {
                "tags": [
                    "Assets",
                    "AssetsAsPlanned"
                ],
                "summary": "Get searchable values for a fieldName",
                "description": "The endpoint returns searchable values for given fieldName.",
                "operationId": "searchable-values_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchableAssetsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns searchable values for given fieldName.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-planned/detail-information": {
            "post": {
                "tags": [
                    "AssetsAsPlanned"
                ],
                "summary": "Searches for assets by ids.",
                "description": "The endpoint searchs for assets by id and returns a list of them.",
                "operationId": "getDetailInformation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetDetailInformationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the paged result found for Asset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                        "maxItems": 2147483647,
                                        "type": "array",
                                        "description": "Assets",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                                                },
                                                "idShort": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "assembly-part-relationship"
                                                },
                                                "semanticModelId": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "NO-246880451848384868750731"
                                                },
                                                "businessPartner": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "BPNL00000003CSGV"
                                                },
                                                "manufacturerName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "Tier C"
                                                },
                                                "nameAtManufacturer": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "Tier C"
                                                },
                                                "manufacturerPartId": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "Tier C"
                                                },
                                                "owner": {
                                                    "type": "string",
                                                    "example": "CUSTOMER",
                                                    "enum": [
                                                        "SUPPLIER",
                                                        "CUSTOMER",
                                                        "OWN",
                                                        "UNKNOWN"
                                                    ]
                                                },
                                                "childRelations": {
                                                    "maxItems": 2147483647,
                                                    "type": "array",
                                                    "description": "Child relationships",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DescriptionsResponse"
                                                    }
                                                },
                                                "parentRelations": {
                                                    "maxItems": 2147483647,
                                                    "type": "array",
                                                    "description": "Parent relationships",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DescriptionsResponse"
                                                    }
                                                },
                                                "qualityType": {
                                                    "type": "string",
                                                    "example": "Ok",
                                                    "enum": [
                                                        "Ok",
                                                        "Minor",
                                                        "Major",
                                                        "Critical",
                                                        "LifeThreatening"
                                                    ]
                                                },
                                                "van": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "OMAYSKEITUGNVHKKX"
                                                },
                                                "semanticDataModel": {
                                                    "type": "string",
                                                    "example": "BATCH",
                                                    "enum": [
                                                        "BATCH",
                                                        "SERIALPART",
                                                        "UNKNOWN",
                                                        "PARTASPLANNED",
                                                        "JUSTINSEQUENCE",
                                                        "TOMBSTONEASBUILT",
                                                        "TOMBSTONEASPLANNED"
                                                    ]
                                                },
                                                "classification": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "component"
                                                },
                                                "detailAspectModels": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DetailAspectModelResponse"
                                                    }
                                                },
                                                "sentQualityAlertIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 1,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    }
                                                },
                                                "receivedQualityAlertIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 1,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    }
                                                },
                                                "sentQualityInvestigationIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 2,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 2
                                                    }
                                                },
                                                "receivedQualityInvestigationIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 2,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 2
                                                    }
                                                },
                                                "importState": {
                                                    "type": "string",
                                                    "example": "TRANSIENT",
                                                    "enum": [
                                                        "TRANSIENT",
                                                        "PERSISTENT",
                                                        "ERROR",
                                                        "IN_SYNCHRONIZATION",
                                                        "PUBLISHED_TO_CORE_SERVICES",
                                                        "UNSET"
                                                    ]
                                                },
                                                "importNote": {
                                                    "type": "string",
                                                    "example": "Asset created successfully in transient state"
                                                },
                                                "tombstone": {
                                                    "type": "string",
                                                    "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-built/sync": {
            "post": {
                "tags": [
                    "AssetsAsBuilt"
                ],
                "summary": "Synchronizes assets from IRS",
                "description": "The endpoint synchronizes the assets from irs.",
                "operationId": "sync_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncAssetsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created."
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-built/searchable-values": {
            "post": {
                "tags": [
                    "AssetsAsBuilt",
                    "Assets"
                ],
                "summary": "Get searchable values for a fieldName",
                "description": "The endpoint returns searchable values for given fieldName.",
                "operationId": "searchable-values_2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SearchableAssetsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns searchable values for given fieldName.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-built/detail-information": {
            "post": {
                "tags": [
                    "AssetsAsBuilt"
                ],
                "summary": "Searches for assets by ids.",
                "description": "The endpoint searchs for assets by id and returns a list of them.",
                "operationId": "getDetailInformation_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetDetailInformationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the paged result found for Asset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                        "maxItems": 2147483647,
                                        "type": "array",
                                        "description": "Assets",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                                                },
                                                "idShort": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "assembly-part-relationship"
                                                },
                                                "semanticModelId": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "NO-246880451848384868750731"
                                                },
                                                "businessPartner": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "BPNL00000003CSGV"
                                                },
                                                "manufacturerName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "Tier C"
                                                },
                                                "nameAtManufacturer": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "Tier C"
                                                },
                                                "manufacturerPartId": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "Tier C"
                                                },
                                                "owner": {
                                                    "type": "string",
                                                    "example": "CUSTOMER",
                                                    "enum": [
                                                        "SUPPLIER",
                                                        "CUSTOMER",
                                                        "OWN",
                                                        "UNKNOWN"
                                                    ]
                                                },
                                                "childRelations": {
                                                    "maxItems": 2147483647,
                                                    "type": "array",
                                                    "description": "Child relationships",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DescriptionsResponse"
                                                    }
                                                },
                                                "parentRelations": {
                                                    "maxItems": 2147483647,
                                                    "type": "array",
                                                    "description": "Parent relationships",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DescriptionsResponse"
                                                    }
                                                },
                                                "qualityType": {
                                                    "type": "string",
                                                    "example": "Ok",
                                                    "enum": [
                                                        "Ok",
                                                        "Minor",
                                                        "Major",
                                                        "Critical",
                                                        "LifeThreatening"
                                                    ]
                                                },
                                                "van": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "OMAYSKEITUGNVHKKX"
                                                },
                                                "semanticDataModel": {
                                                    "type": "string",
                                                    "example": "BATCH",
                                                    "enum": [
                                                        "BATCH",
                                                        "SERIALPART",
                                                        "UNKNOWN",
                                                        "PARTASPLANNED",
                                                        "JUSTINSEQUENCE",
                                                        "TOMBSTONEASBUILT",
                                                        "TOMBSTONEASPLANNED"
                                                    ]
                                                },
                                                "classification": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "component"
                                                },
                                                "detailAspectModels": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DetailAspectModelResponse"
                                                    }
                                                },
                                                "sentQualityAlertIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 1,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    }
                                                },
                                                "receivedQualityAlertIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 1,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    }
                                                },
                                                "sentQualityInvestigationIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 2,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 2
                                                    }
                                                },
                                                "receivedQualityInvestigationIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 2,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 2
                                                    }
                                                },
                                                "importState": {
                                                    "type": "string",
                                                    "example": "TRANSIENT",
                                                    "enum": [
                                                        "TRANSIENT",
                                                        "PERSISTENT",
                                                        "ERROR",
                                                        "IN_SYNCHRONIZATION",
                                                        "PUBLISHED_TO_CORE_SERVICES",
                                                        "UNSET"
                                                    ]
                                                },
                                                "importNote": {
                                                    "type": "string",
                                                    "example": "Asset created successfully in transient state"
                                                },
                                                "tombstone": {
                                                    "type": "string",
                                                    "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-planned/{assetId}": {
            "get": {
                "tags": [
                    "AssetsAsPlanned"
                ],
                "summary": "Get asset by id",
                "description": "The endpoint returns an asset filtered by id .",
                "operationId": "assetById",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the assets found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "type": "array",
                                    "description": "Assets",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                                            },
                                            "idShort": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "assembly-part-relationship"
                                            },
                                            "semanticModelId": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "NO-246880451848384868750731"
                                            },
                                            "businessPartner": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "BPNL00000003CSGV"
                                            },
                                            "manufacturerName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "nameAtManufacturer": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "manufacturerPartId": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "owner": {
                                                "type": "string",
                                                "example": "CUSTOMER",
                                                "enum": [
                                                    "SUPPLIER",
                                                    "CUSTOMER",
                                                    "OWN",
                                                    "UNKNOWN"
                                                ]
                                            },
                                            "childRelations": {
                                                "maxItems": 2147483647,
                                                "type": "array",
                                                "description": "Child relationships",
                                                "items": {
                                                    "$ref": "#/components/schemas/DescriptionsResponse"
                                                }
                                            },
                                            "parentRelations": {
                                                "maxItems": 2147483647,
                                                "type": "array",
                                                "description": "Parent relationships",
                                                "items": {
                                                    "$ref": "#/components/schemas/DescriptionsResponse"
                                                }
                                            },
                                            "qualityType": {
                                                "type": "string",
                                                "example": "Ok",
                                                "enum": [
                                                    "Ok",
                                                    "Minor",
                                                    "Major",
                                                    "Critical",
                                                    "LifeThreatening"
                                                ]
                                            },
                                            "van": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "OMAYSKEITUGNVHKKX"
                                            },
                                            "semanticDataModel": {
                                                "type": "string",
                                                "example": "BATCH",
                                                "enum": [
                                                    "BATCH",
                                                    "SERIALPART",
                                                    "UNKNOWN",
                                                    "PARTASPLANNED",
                                                    "JUSTINSEQUENCE",
                                                    "TOMBSTONEASBUILT",
                                                    "TOMBSTONEASPLANNED"
                                                ]
                                            },
                                            "classification": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "component"
                                            },
                                            "detailAspectModels": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/DetailAspectModelResponse"
                                                }
                                            },
                                            "sentQualityAlertIdsInStatusActive": {
                                                "type": "array",
                                                "example": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            },
                                            "receivedQualityAlertIdsInStatusActive": {
                                                "type": "array",
                                                "example": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            },
                                            "sentQualityInvestigationIdsInStatusActive": {
                                                "type": "array",
                                                "example": 2,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2
                                                }
                                            },
                                            "receivedQualityInvestigationIdsInStatusActive": {
                                                "type": "array",
                                                "example": 2,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2
                                                }
                                            },
                                            "importState": {
                                                "type": "string",
                                                "example": "TRANSIENT",
                                                "enum": [
                                                    "TRANSIENT",
                                                    "PERSISTENT",
                                                    "ERROR",
                                                    "IN_SYNCHRONIZATION",
                                                    "PUBLISHED_TO_CORE_SERVICES",
                                                    "UNSET"
                                                ]
                                            },
                                            "importNote": {
                                                "type": "string",
                                                "example": "Asset created successfully in transient state"
                                            },
                                            "tombstone": {
                                                "type": "string",
                                                "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            },
            "patch": {
                "tags": [
                    "AssetsAsPlanned"
                ],
                "summary": "Updates asset",
                "description": "The endpoint updates asset by provided quality type.",
                "operationId": "updateAsset",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAssetRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the updated asset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "type": "array",
                                    "description": "Assets",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                                            },
                                            "idShort": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "assembly-part-relationship"
                                            },
                                            "semanticModelId": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "NO-246880451848384868750731"
                                            },
                                            "businessPartner": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "BPNL00000003CSGV"
                                            },
                                            "manufacturerName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "nameAtManufacturer": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "manufacturerPartId": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "owner": {
                                                "type": "string",
                                                "example": "CUSTOMER",
                                                "enum": [
                                                    "SUPPLIER",
                                                    "CUSTOMER",
                                                    "OWN",
                                                    "UNKNOWN"
                                                ]
                                            },
                                            "childRelations": {
                                                "maxItems": 2147483647,
                                                "type": "array",
                                                "description": "Child relationships",
                                                "items": {
                                                    "$ref": "#/components/schemas/DescriptionsResponse"
                                                }
                                            },
                                            "parentRelations": {
                                                "maxItems": 2147483647,
                                                "type": "array",
                                                "description": "Parent relationships",
                                                "items": {
                                                    "$ref": "#/components/schemas/DescriptionsResponse"
                                                }
                                            },
                                            "qualityType": {
                                                "type": "string",
                                                "example": "Ok",
                                                "enum": [
                                                    "Ok",
                                                    "Minor",
                                                    "Major",
                                                    "Critical",
                                                    "LifeThreatening"
                                                ]
                                            },
                                            "van": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "OMAYSKEITUGNVHKKX"
                                            },
                                            "semanticDataModel": {
                                                "type": "string",
                                                "example": "BATCH",
                                                "enum": [
                                                    "BATCH",
                                                    "SERIALPART",
                                                    "UNKNOWN",
                                                    "PARTASPLANNED",
                                                    "JUSTINSEQUENCE",
                                                    "TOMBSTONEASBUILT",
                                                    "TOMBSTONEASPLANNED"
                                                ]
                                            },
                                            "classification": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "component"
                                            },
                                            "detailAspectModels": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/DetailAspectModelResponse"
                                                }
                                            },
                                            "sentQualityAlertIdsInStatusActive": {
                                                "type": "array",
                                                "example": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            },
                                            "receivedQualityAlertIdsInStatusActive": {
                                                "type": "array",
                                                "example": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            },
                                            "sentQualityInvestigationIdsInStatusActive": {
                                                "type": "array",
                                                "example": 2,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2
                                                }
                                            },
                                            "receivedQualityInvestigationIdsInStatusActive": {
                                                "type": "array",
                                                "example": 2,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2
                                                }
                                            },
                                            "importState": {
                                                "type": "string",
                                                "example": "TRANSIENT",
                                                "enum": [
                                                    "TRANSIENT",
                                                    "PERSISTENT",
                                                    "ERROR",
                                                    "IN_SYNCHRONIZATION",
                                                    "PUBLISHED_TO_CORE_SERVICES",
                                                    "UNSET"
                                                ]
                                            },
                                            "importNote": {
                                                "type": "string",
                                                "example": "Asset created successfully in transient state"
                                            },
                                            "tombstone": {
                                                "type": "string",
                                                "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-built/{assetId}": {
            "get": {
                "tags": [
                    "AssetsAsBuilt"
                ],
                "summary": "Get asset by id",
                "description": "The endpoint returns an asset filtered by id .",
                "operationId": "assetById_1",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the assets found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "type": "array",
                                    "description": "Assets",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                                            },
                                            "idShort": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "assembly-part-relationship"
                                            },
                                            "semanticModelId": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "NO-246880451848384868750731"
                                            },
                                            "businessPartner": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "BPNL00000003CSGV"
                                            },
                                            "manufacturerName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "nameAtManufacturer": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "manufacturerPartId": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "owner": {
                                                "type": "string",
                                                "example": "CUSTOMER",
                                                "enum": [
                                                    "SUPPLIER",
                                                    "CUSTOMER",
                                                    "OWN",
                                                    "UNKNOWN"
                                                ]
                                            },
                                            "childRelations": {
                                                "maxItems": 2147483647,
                                                "type": "array",
                                                "description": "Child relationships",
                                                "items": {
                                                    "$ref": "#/components/schemas/DescriptionsResponse"
                                                }
                                            },
                                            "parentRelations": {
                                                "maxItems": 2147483647,
                                                "type": "array",
                                                "description": "Parent relationships",
                                                "items": {
                                                    "$ref": "#/components/schemas/DescriptionsResponse"
                                                }
                                            },
                                            "qualityType": {
                                                "type": "string",
                                                "example": "Ok",
                                                "enum": [
                                                    "Ok",
                                                    "Minor",
                                                    "Major",
                                                    "Critical",
                                                    "LifeThreatening"
                                                ]
                                            },
                                            "van": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "OMAYSKEITUGNVHKKX"
                                            },
                                            "semanticDataModel": {
                                                "type": "string",
                                                "example": "BATCH",
                                                "enum": [
                                                    "BATCH",
                                                    "SERIALPART",
                                                    "UNKNOWN",
                                                    "PARTASPLANNED",
                                                    "JUSTINSEQUENCE",
                                                    "TOMBSTONEASBUILT",
                                                    "TOMBSTONEASPLANNED"
                                                ]
                                            },
                                            "classification": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "component"
                                            },
                                            "detailAspectModels": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/DetailAspectModelResponse"
                                                }
                                            },
                                            "sentQualityAlertIdsInStatusActive": {
                                                "type": "array",
                                                "example": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            },
                                            "receivedQualityAlertIdsInStatusActive": {
                                                "type": "array",
                                                "example": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            },
                                            "sentQualityInvestigationIdsInStatusActive": {
                                                "type": "array",
                                                "example": 2,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2
                                                }
                                            },
                                            "receivedQualityInvestigationIdsInStatusActive": {
                                                "type": "array",
                                                "example": 2,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2
                                                }
                                            },
                                            "importState": {
                                                "type": "string",
                                                "example": "TRANSIENT",
                                                "enum": [
                                                    "TRANSIENT",
                                                    "PERSISTENT",
                                                    "ERROR",
                                                    "IN_SYNCHRONIZATION",
                                                    "PUBLISHED_TO_CORE_SERVICES",
                                                    "UNSET"
                                                ]
                                            },
                                            "importNote": {
                                                "type": "string",
                                                "example": "Asset created successfully in transient state"
                                            },
                                            "tombstone": {
                                                "type": "string",
                                                "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            },
            "patch": {
                "tags": [
                    "AssetsAsBuilt"
                ],
                "summary": "Updates asset",
                "description": "The endpoint updates asset by provided quality type.",
                "operationId": "updateAsset_1",
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAssetRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the updated asset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "type": "array",
                                    "description": "Assets",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                                            },
                                            "idShort": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "assembly-part-relationship"
                                            },
                                            "semanticModelId": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "NO-246880451848384868750731"
                                            },
                                            "businessPartner": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "BPNL00000003CSGV"
                                            },
                                            "manufacturerName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "nameAtManufacturer": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "manufacturerPartId": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "owner": {
                                                "type": "string",
                                                "example": "CUSTOMER",
                                                "enum": [
                                                    "SUPPLIER",
                                                    "CUSTOMER",
                                                    "OWN",
                                                    "UNKNOWN"
                                                ]
                                            },
                                            "childRelations": {
                                                "maxItems": 2147483647,
                                                "type": "array",
                                                "description": "Child relationships",
                                                "items": {
                                                    "$ref": "#/components/schemas/DescriptionsResponse"
                                                }
                                            },
                                            "parentRelations": {
                                                "maxItems": 2147483647,
                                                "type": "array",
                                                "description": "Parent relationships",
                                                "items": {
                                                    "$ref": "#/components/schemas/DescriptionsResponse"
                                                }
                                            },
                                            "qualityType": {
                                                "type": "string",
                                                "example": "Ok",
                                                "enum": [
                                                    "Ok",
                                                    "Minor",
                                                    "Major",
                                                    "Critical",
                                                    "LifeThreatening"
                                                ]
                                            },
                                            "van": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "OMAYSKEITUGNVHKKX"
                                            },
                                            "semanticDataModel": {
                                                "type": "string",
                                                "example": "BATCH",
                                                "enum": [
                                                    "BATCH",
                                                    "SERIALPART",
                                                    "UNKNOWN",
                                                    "PARTASPLANNED",
                                                    "JUSTINSEQUENCE",
                                                    "TOMBSTONEASBUILT",
                                                    "TOMBSTONEASPLANNED"
                                                ]
                                            },
                                            "classification": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "component"
                                            },
                                            "detailAspectModels": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/DetailAspectModelResponse"
                                                }
                                            },
                                            "sentQualityAlertIdsInStatusActive": {
                                                "type": "array",
                                                "example": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            },
                                            "receivedQualityAlertIdsInStatusActive": {
                                                "type": "array",
                                                "example": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            },
                                            "sentQualityInvestigationIdsInStatusActive": {
                                                "type": "array",
                                                "example": 2,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2
                                                }
                                            },
                                            "receivedQualityInvestigationIdsInStatusActive": {
                                                "type": "array",
                                                "example": 2,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2
                                                }
                                            },
                                            "importState": {
                                                "type": "string",
                                                "example": "TRANSIENT",
                                                "enum": [
                                                    "TRANSIENT",
                                                    "PERSISTENT",
                                                    "ERROR",
                                                    "IN_SYNCHRONIZATION",
                                                    "PUBLISHED_TO_CORE_SERVICES",
                                                    "UNSET"
                                                ]
                                            },
                                            "importNote": {
                                                "type": "string",
                                                "example": "Asset created successfully in transient state"
                                            },
                                            "tombstone": {
                                                "type": "string",
                                                "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/registry/reload": {
            "get": {
                "tags": [
                    "Registry"
                ],
                "summary": "Triggers reload of shell descriptors",
                "description": "The endpoint Triggers reload of shell descriptors.",
                "operationId": "reload",
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Created registry reload job."
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/policies/{policyId}": {
            "get": {
                "tags": [
                    "Policies"
                ],
                "summary": "Gets policy by id",
                "description": "The endpoint returns policy by id.",
                "operationId": "getPolicyById",
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PolicyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Policies"
                ],
                "summary": "Deletes a policy ",
                "description": "The endpoint deletes policies.",
                "operationId": "deletePolicy",
                "parameters": [
                    {
                        "name": "policyId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Deletion successful",
                        "content": {
                            "application/json": {
                                
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/notifications/{notificationId}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Gets notification by id",
                "description": "The endpoint returns notification by id.",
                "operationId": "getNotification",
                "parameters": [
                    {
                        "name": "notificationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "type": "array",
                                    "description": "Notifications",
                                    "items": {
                                        "$ref": "#/components/schemas/NotificationResponse"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/dashboard": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Returns dashboard related data",
                "description": "The endpoint can return limited data based on the user role",
                "operationId": "dashboard",
                "responses": {
                    "200": {
                        "description": "Returns dashboard data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DashboardResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/import/report/{importJobId}": {
            "get": {
                "tags": [
                    "ImportReport",
                    "AssetsImport"
                ],
                "summary": "report of the imported assets",
                "description": "This endpoint returns information about the imported assets to Trace-X.",
                "operationId": "importReport",
                "parameters": [
                    {
                        "name": "importJobId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportReportResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content."
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-planned": {
            "get": {
                "tags": [
                    "AssetsAsPlanned"
                ],
                "summary": "Get assets by pagination",
                "description": "The endpoint returns a paged result of assets.",
                "operationId": "AssetsAsPlanned",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/OwnPageable"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchCriteriaRequestParam"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the paged result found for Asset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                        "maxItems": 2147483647,
                                        "type": "array",
                                        "description": "Assets",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                                                },
                                                "idShort": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "assembly-part-relationship"
                                                },
                                                "semanticModelId": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "NO-246880451848384868750731"
                                                },
                                                "businessPartner": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "BPNL00000003CSGV"
                                                },
                                                "manufacturerName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "Tier C"
                                                },
                                                "nameAtManufacturer": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "Tier C"
                                                },
                                                "manufacturerPartId": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "Tier C"
                                                },
                                                "owner": {
                                                    "type": "string",
                                                    "example": "CUSTOMER",
                                                    "enum": [
                                                        "SUPPLIER",
                                                        "CUSTOMER",
                                                        "OWN",
                                                        "UNKNOWN"
                                                    ]
                                                },
                                                "childRelations": {
                                                    "maxItems": 2147483647,
                                                    "type": "array",
                                                    "description": "Child relationships",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DescriptionsResponse"
                                                    }
                                                },
                                                "parentRelations": {
                                                    "maxItems": 2147483647,
                                                    "type": "array",
                                                    "description": "Parent relationships",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DescriptionsResponse"
                                                    }
                                                },
                                                "qualityType": {
                                                    "type": "string",
                                                    "example": "Ok",
                                                    "enum": [
                                                        "Ok",
                                                        "Minor",
                                                        "Major",
                                                        "Critical",
                                                        "LifeThreatening"
                                                    ]
                                                },
                                                "van": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "OMAYSKEITUGNVHKKX"
                                                },
                                                "semanticDataModel": {
                                                    "type": "string",
                                                    "example": "BATCH",
                                                    "enum": [
                                                        "BATCH",
                                                        "SERIALPART",
                                                        "UNKNOWN",
                                                        "PARTASPLANNED",
                                                        "JUSTINSEQUENCE",
                                                        "TOMBSTONEASBUILT",
                                                        "TOMBSTONEASPLANNED"
                                                    ]
                                                },
                                                "classification": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "component"
                                                },
                                                "detailAspectModels": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DetailAspectModelResponse"
                                                    }
                                                },
                                                "sentQualityAlertIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 1,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    }
                                                },
                                                "receivedQualityAlertIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 1,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    }
                                                },
                                                "sentQualityInvestigationIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 2,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 2
                                                    }
                                                },
                                                "receivedQualityInvestigationIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 2,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 2
                                                    }
                                                },
                                                "importState": {
                                                    "type": "string",
                                                    "example": "TRANSIENT",
                                                    "enum": [
                                                        "TRANSIENT",
                                                        "PERSISTENT",
                                                        "ERROR",
                                                        "IN_SYNCHRONIZATION",
                                                        "PUBLISHED_TO_CORE_SERVICES",
                                                        "UNSET"
                                                    ]
                                                },
                                                "importNote": {
                                                    "type": "string",
                                                    "example": "Asset created successfully in transient state"
                                                },
                                                "tombstone": {
                                                    "type": "string",
                                                    "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-planned/*/children/{childId}": {
            "get": {
                "tags": [
                    "AssetsAsPlanned"
                ],
                "summary": "Get asset by child id",
                "description": "The endpoint returns an asset filtered by child id.",
                "operationId": "assetByChildIdAndAssetId",
                "parameters": [
                    {
                        "name": "childId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the asset by childId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "type": "array",
                                    "description": "Assets",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                                            },
                                            "idShort": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "assembly-part-relationship"
                                            },
                                            "semanticModelId": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "NO-246880451848384868750731"
                                            },
                                            "businessPartner": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "BPNL00000003CSGV"
                                            },
                                            "manufacturerName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "nameAtManufacturer": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "manufacturerPartId": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "owner": {
                                                "type": "string",
                                                "example": "CUSTOMER",
                                                "enum": [
                                                    "SUPPLIER",
                                                    "CUSTOMER",
                                                    "OWN",
                                                    "UNKNOWN"
                                                ]
                                            },
                                            "childRelations": {
                                                "maxItems": 2147483647,
                                                "type": "array",
                                                "description": "Child relationships",
                                                "items": {
                                                    "$ref": "#/components/schemas/DescriptionsResponse"
                                                }
                                            },
                                            "parentRelations": {
                                                "maxItems": 2147483647,
                                                "type": "array",
                                                "description": "Parent relationships",
                                                "items": {
                                                    "$ref": "#/components/schemas/DescriptionsResponse"
                                                }
                                            },
                                            "qualityType": {
                                                "type": "string",
                                                "example": "Ok",
                                                "enum": [
                                                    "Ok",
                                                    "Minor",
                                                    "Major",
                                                    "Critical",
                                                    "LifeThreatening"
                                                ]
                                            },
                                            "van": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "OMAYSKEITUGNVHKKX"
                                            },
                                            "semanticDataModel": {
                                                "type": "string",
                                                "example": "BATCH",
                                                "enum": [
                                                    "BATCH",
                                                    "SERIALPART",
                                                    "UNKNOWN",
                                                    "PARTASPLANNED",
                                                    "JUSTINSEQUENCE",
                                                    "TOMBSTONEASBUILT",
                                                    "TOMBSTONEASPLANNED"
                                                ]
                                            },
                                            "classification": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "component"
                                            },
                                            "detailAspectModels": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/DetailAspectModelResponse"
                                                }
                                            },
                                            "sentQualityAlertIdsInStatusActive": {
                                                "type": "array",
                                                "example": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            },
                                            "receivedQualityAlertIdsInStatusActive": {
                                                "type": "array",
                                                "example": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            },
                                            "sentQualityInvestigationIdsInStatusActive": {
                                                "type": "array",
                                                "example": 2,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2
                                                }
                                            },
                                            "receivedQualityInvestigationIdsInStatusActive": {
                                                "type": "array",
                                                "example": 2,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2
                                                }
                                            },
                                            "importState": {
                                                "type": "string",
                                                "example": "TRANSIENT",
                                                "enum": [
                                                    "TRANSIENT",
                                                    "PERSISTENT",
                                                    "ERROR",
                                                    "IN_SYNCHRONIZATION",
                                                    "PUBLISHED_TO_CORE_SERVICES",
                                                    "UNSET"
                                                ]
                                            },
                                            "importNote": {
                                                "type": "string",
                                                "example": "Asset created successfully in transient state"
                                            },
                                            "tombstone": {
                                                "type": "string",
                                                "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-built": {
            "get": {
                "tags": [
                    "AssetsAsBuilt"
                ],
                "summary": "Get assets by pagination",
                "description": "The endpoint returns a paged result of assets.",
                "operationId": "assets",
                "parameters": [
                    {
                        "name": "pageable",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/OwnPageable"
                        }
                    },
                    {
                        "name": "searchCriteriaRequestParam",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SearchCriteriaRequestParam"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the paged result found for Asset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                        "maxItems": 2147483647,
                                        "type": "array",
                                        "description": "Assets",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                                                },
                                                "idShort": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "assembly-part-relationship"
                                                },
                                                "semanticModelId": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "NO-246880451848384868750731"
                                                },
                                                "businessPartner": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "BPNL00000003CSGV"
                                                },
                                                "manufacturerName": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "Tier C"
                                                },
                                                "nameAtManufacturer": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "Tier C"
                                                },
                                                "manufacturerPartId": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "Tier C"
                                                },
                                                "owner": {
                                                    "type": "string",
                                                    "example": "CUSTOMER",
                                                    "enum": [
                                                        "SUPPLIER",
                                                        "CUSTOMER",
                                                        "OWN",
                                                        "UNKNOWN"
                                                    ]
                                                },
                                                "childRelations": {
                                                    "maxItems": 2147483647,
                                                    "type": "array",
                                                    "description": "Child relationships",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DescriptionsResponse"
                                                    }
                                                },
                                                "parentRelations": {
                                                    "maxItems": 2147483647,
                                                    "type": "array",
                                                    "description": "Parent relationships",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DescriptionsResponse"
                                                    }
                                                },
                                                "qualityType": {
                                                    "type": "string",
                                                    "example": "Ok",
                                                    "enum": [
                                                        "Ok",
                                                        "Minor",
                                                        "Major",
                                                        "Critical",
                                                        "LifeThreatening"
                                                    ]
                                                },
                                                "van": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "OMAYSKEITUGNVHKKX"
                                                },
                                                "semanticDataModel": {
                                                    "type": "string",
                                                    "example": "BATCH",
                                                    "enum": [
                                                        "BATCH",
                                                        "SERIALPART",
                                                        "UNKNOWN",
                                                        "PARTASPLANNED",
                                                        "JUSTINSEQUENCE",
                                                        "TOMBSTONEASBUILT",
                                                        "TOMBSTONEASPLANNED"
                                                    ]
                                                },
                                                "classification": {
                                                    "maxLength": 255,
                                                    "minLength": 0,
                                                    "type": "string",
                                                    "example": "component"
                                                },
                                                "detailAspectModels": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DetailAspectModelResponse"
                                                    }
                                                },
                                                "sentQualityAlertIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 1,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    }
                                                },
                                                "receivedQualityAlertIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 1,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 1
                                                    }
                                                },
                                                "sentQualityInvestigationIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 2,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 2
                                                    }
                                                },
                                                "receivedQualityInvestigationIdsInStatusActive": {
                                                    "type": "array",
                                                    "example": 2,
                                                    "items": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": 2
                                                    }
                                                },
                                                "importState": {
                                                    "type": "string",
                                                    "example": "TRANSIENT",
                                                    "enum": [
                                                        "TRANSIENT",
                                                        "PERSISTENT",
                                                        "ERROR",
                                                        "IN_SYNCHRONIZATION",
                                                        "PUBLISHED_TO_CORE_SERVICES",
                                                        "UNSET"
                                                    ]
                                                },
                                                "importNote": {
                                                    "type": "string",
                                                    "example": "Asset created successfully in transient state"
                                                },
                                                "tombstone": {
                                                    "type": "string",
                                                    "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-built/countries": {
            "get": {
                "tags": [
                    "AssetsAsBuilt"
                ],
                "summary": "Get map of assets",
                "description": "The endpoint returns a map for assets consumed by the map.",
                "operationId": "assetsCountryMap",
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the assets found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "minItems": 0,
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/assets/as-built/*/children/{childId}": {
            "get": {
                "tags": [
                    "AssetsAsBuilt"
                ],
                "summary": "Get asset by child id",
                "description": "The endpoint returns an asset filtered by child id.",
                "operationId": "assetByChildId",
                "parameters": [
                    {
                        "name": "childId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the asset by childId",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "maxItems": 2147483647,
                                    "type": "array",
                                    "description": "Assets",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                                            },
                                            "idShort": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "assembly-part-relationship"
                                            },
                                            "semanticModelId": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "NO-246880451848384868750731"
                                            },
                                            "businessPartner": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "BPNL00000003CSGV"
                                            },
                                            "manufacturerName": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "nameAtManufacturer": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "manufacturerPartId": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "Tier C"
                                            },
                                            "owner": {
                                                "type": "string",
                                                "example": "CUSTOMER",
                                                "enum": [
                                                    "SUPPLIER",
                                                    "CUSTOMER",
                                                    "OWN",
                                                    "UNKNOWN"
                                                ]
                                            },
                                            "childRelations": {
                                                "maxItems": 2147483647,
                                                "type": "array",
                                                "description": "Child relationships",
                                                "items": {
                                                    "$ref": "#/components/schemas/DescriptionsResponse"
                                                }
                                            },
                                            "parentRelations": {
                                                "maxItems": 2147483647,
                                                "type": "array",
                                                "description": "Parent relationships",
                                                "items": {
                                                    "$ref": "#/components/schemas/DescriptionsResponse"
                                                }
                                            },
                                            "qualityType": {
                                                "type": "string",
                                                "example": "Ok",
                                                "enum": [
                                                    "Ok",
                                                    "Minor",
                                                    "Major",
                                                    "Critical",
                                                    "LifeThreatening"
                                                ]
                                            },
                                            "van": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "OMAYSKEITUGNVHKKX"
                                            },
                                            "semanticDataModel": {
                                                "type": "string",
                                                "example": "BATCH",
                                                "enum": [
                                                    "BATCH",
                                                    "SERIALPART",
                                                    "UNKNOWN",
                                                    "PARTASPLANNED",
                                                    "JUSTINSEQUENCE",
                                                    "TOMBSTONEASBUILT",
                                                    "TOMBSTONEASPLANNED"
                                                ]
                                            },
                                            "classification": {
                                                "maxLength": 255,
                                                "minLength": 0,
                                                "type": "string",
                                                "example": "component"
                                            },
                                            "detailAspectModels": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/DetailAspectModelResponse"
                                                }
                                            },
                                            "sentQualityAlertIdsInStatusActive": {
                                                "type": "array",
                                                "example": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            },
                                            "receivedQualityAlertIdsInStatusActive": {
                                                "type": "array",
                                                "example": 1,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 1
                                                }
                                            },
                                            "sentQualityInvestigationIdsInStatusActive": {
                                                "type": "array",
                                                "example": 2,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2
                                                }
                                            },
                                            "receivedQualityInvestigationIdsInStatusActive": {
                                                "type": "array",
                                                "example": 2,
                                                "items": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "example": 2
                                                }
                                            },
                                            "importState": {
                                                "type": "string",
                                                "example": "TRANSIENT",
                                                "enum": [
                                                    "TRANSIENT",
                                                    "PERSISTENT",
                                                    "ERROR",
                                                    "IN_SYNCHRONIZATION",
                                                    "PUBLISHED_TO_CORE_SERVICES",
                                                    "UNSET"
                                                ]
                                            },
                                            "importNote": {
                                                "type": "string",
                                                "example": "Asset created successfully in transient state"
                                            },
                                            "tombstone": {
                                                "type": "string",
                                                "example": "        {\n            \"catenaXId\": \"urn:uuid:7e4541ea-bb0f-464c-8cb3-021abccbfaf5\",\n            \"endpointURL\": \"https://irs-provider-dataplane3.dev.demo.catena-x.net/api/public/data/urn:uuid:c7b3ea3d-97ea-41e4-960d-12fb166e1da1\",\n            \"processingError\": {\n                \"processStep\": \"SubmodelRequest\",\n                \"errorDetail\": \"org.springframework.web.client.HttpServerErrorException$InternalServerError: 500 : \"{\"errors\":[]}\"\",\n                \"lastAttempt\": \"2024-02-07T12:06:34.400493282Z\",\n                \"retryCounter\": 0\n            },\n            \"policy\": null\n        }\n"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/submodel/data": {
            "delete": {
                "tags": [
                    "Submodel"
                ],
                "summary": "Delete All Submodels",
                "description": "Deletes all submodels from the system.",
                "operationId": "deleteSubmodels",
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Ok."
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No Content."
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        },
        "/bpn-config/{bpn}": {
            "delete": {
                "tags": [
                    "BpnEdcMapping"
                ],
                "summary": "Deletes BPN EDC URL mappings",
                "description": "The endpoint deletes BPN EDC URL mappings",
                "operationId": "deleteBpnEdcUrlMappings",
                "parameters": [
                    {
                        "name": "bpn",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Authorization failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "Unsupported media type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Okay"
                    },
                    "429": {
                        "description": "Too many requests.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Deleted."
                    }
                },
                "security": [
                    {
                        "oAuth2": [
                            "profile email"
                        ]
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "UpdatePolicyRequest": {
                "type": "object",
                "properties": {
                    "businessPartnerNumbers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "policyIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "validUntil": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "pattern": "^.*$",
                        "type": "string",
                        "example": "Access Denied"
                    }
                }
            },
            "EditNotificationRequest": {
                "required": [
                    "affectedPartIds",
                    "description",
                    "receiverBpn",
                    "severity"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string",
                        "example": "title"
                    },
                    "receiverBpn": {
                        "type": "string",
                        "example": "BPNL00000003CNKC"
                    },
                    "severity": {
                        "type": "string",
                        "enum": [
                            "MINOR",
                            "MAJOR",
                            "CRITICAL",
                            "LIFE-THREATENING"
                        ]
                    },
                    "targetDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2099-03-11T22:44:06.333826952Z"
                    },
                    "description": {
                        "maxLength": 1000,
                        "minLength": 15,
                        "type": "string",
                        "example": "The description"
                    },
                    "affectedPartIds": {
                        "maxLength": 50,
                        "minLength": 1,
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array",
                        "example": [
                            "urn:uuid:fe99da3d-b0de-4e80-81da-882aebcca978"
                        ],
                        "items": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string",
                            "example": "[\"urn:uuid:fe99da3d-b0de-4e80-81da-882aebcca978\"]"
                        }
                    }
                }
            },
            "BpnMappingRequest": {
                "required": [
                    "bpn",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "bpn": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "BPNL00000003CSGV"
                    },
                    "url": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    }
                }
            },
            "BpnEdcMappingResponse": {
                "type": "object",
                "properties": {
                    "bpn": {
                        "type": "string",
                        "example": "BPNL00000003CSGV"
                    },
                    "url": {
                        "type": "string",
                        "example": "https://trace-x-test-edc.dev.demo.catena-x.net/a1"
                    }
                }
            },
            "Constraint": {
                "type": "object",
                "properties": {
                    "leftOperand": {
                        "type": "string",
                        "example": "string"
                    },
                    "operator": {
                        "$ref": "#/components/schemas/Operator"
                    },
                    "rightOperand": {
                        "type": "string",
                        "example": "string"
                    }
                }
            },
            "Constraints": {
                "type": "object",
                "properties": {
                    "and": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Constraint"
                        }
                    },
                    "or": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Constraint"
                        }
                    }
                }
            },
            "Context": {
                "type": "object",
                "properties": {
                    "odrl": {
                        "type": "string"
                    }
                }
            },
            "Operator": {
                "type": "object",
                "properties": {
                    "@id": {
                        "type": "string",
                        "example": "odrl:eq",
                        "enum": [
                            "eq",
                            "neq",
                            "lt",
                            "gt",
                            "in",
                            "lteq",
                            "gteq",
                            "isA",
                            "hasPart",
                            "isPartOf",
                            "isOneOf",
                            "isAllOf",
                            "isNoneOf"
                        ]
                    }
                }
            },
            "Payload": {
                "type": "object",
                "properties": {
                    "@context": {
                        "$ref": "#/components/schemas/Context"
                    },
                    "@id": {
                        "type": "string"
                    },
                    "policy": {
                        "$ref": "#/components/schemas/Policy"
                    }
                }
            },
            "Permission": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "example": "use",
                        "enum": [
                            "access",
                            "use"
                        ]
                    },
                    "constraint": {
                        "$ref": "#/components/schemas/Constraints"
                    }
                }
            },
            "Policy": {
                "type": "object",
                "properties": {
                    "policyId": {
                        "type": "string",
                        "example": "f253718e-a270-4367-901b-9d50d9bd8462"
                    },
                    "createdOn": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "validUntil": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    }
                }
            },
            "RegisterPolicyRequest": {
                "type": "object",
                "properties": {
                    "validUntil": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "businessPartnerNumber": {
                        "type": "string"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/Payload"
                    }
                }
            },
            "CreatePolicyResponse": {
                "type": "object",
                "properties": {
                    "policyId": {
                        "type": "string"
                    }
                }
            },
            "StartNotificationRequest": {
                "required": [
                    "receiverBpn",
                    "severity",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "title": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string",
                        "example": "title"
                    },
                    "affectedPartIds": {
                        "maxLength": 100,
                        "minLength": 1,
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array",
                        "example": [
                            "urn:uuid:fe99da3d-b0de-4e80-81da-882aebcca978"
                        ],
                        "items": {
                            "maxLength": 100,
                            "minLength": 1,
                            "type": "string",
                            "example": "[\"urn:uuid:fe99da3d-b0de-4e80-81da-882aebcca978\"]"
                        }
                    },
                    "description": {
                        "maxLength": 1000,
                        "minLength": 15,
                        "type": "string",
                        "example": "The description"
                    },
                    "targetDate": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2099-03-11T22:44:06.333826952Z"
                    },
                    "severity": {
                        "type": "string",
                        "enum": [
                            "MINOR",
                            "MAJOR",
                            "CRITICAL",
                            "LIFE-THREATENING"
                        ]
                    },
                    "receiverBpn": {
                        "type": "string",
                        "example": "BPNL00000003CNKC"
                    },
                    "type": {
                        "type": "string",
                        "example": "ALERT",
                        "enum": [
                            "ALERT",
                            "INVESTIGATION"
                        ]
                    }
                }
            },
            "NotificationIdResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                }
            },
            "UpdateNotificationStatusTransitionRequest": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "The UpdateInvestigationStatus",
                        "enum": [
                            "ACKNOWLEDGED",
                            "ACCEPTED",
                            "DECLINED"
                        ]
                    },
                    "reason": {
                        "type": "string",
                        "example": "The reason."
                    }
                }
            },
            "CloseNotificationRequest": {
                "type": "object",
                "properties": {
                    "reason": {
                        "maxLength": 1000,
                        "minLength": 15,
                        "type": "string",
                        "example": "The reason."
                    }
                }
            },
            "SearchableNotificationsRequest": {
                "required": [
                    "fieldName"
                ],
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string"
                    },
                    "startWith": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "channel": {
                        "type": "string",
                        "enum": [
                            "SENDER",
                            "RECEIVER"
                        ]
                    }
                }
            },
            "OwnPageable": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Content of Assets PageResults",
                        "example": "manufacturerPartId,desc",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "PageableFilterRequest": {
                "type": "object",
                "properties": {
                    "pageAble": {
                        "$ref": "#/components/schemas/OwnPageable"
                    },
                    "searchCriteria": {
                        "$ref": "#/components/schemas/SearchCriteriaRequestParam"
                    }
                }
            },
            "SearchCriteriaRequestParam": {
                "type": "object",
                "properties": {
                    "filter": {
                        "maxItems": 2147483647,
                        "type": "array",
                        "description": "Filter Criteria",
                        "example": "owner,EQUAL,OWN",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "NotificationMessageResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "sentBy": {
                        "type": "string"
                    },
                    "sentByName": {
                        "type": "string"
                    },
                    "sendTo": {
                        "type": "string"
                    },
                    "sendToName": {
                        "type": "string"
                    },
                    "contractAgreementId": {
                        "type": "string"
                    },
                    "notificationReferenceId": {
                        "type": "string"
                    },
                    "edcNotificationId": {
                        "type": "string"
                    },
                    "messageDate": {
                        "maxLength": 50,
                        "type": "string",
                        "example": "2023-02-21T21:27:10.734950Z"
                    },
                    "messageId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "CREATED",
                            "SENT",
                            "RECEIVED",
                            "ACKNOWLEDGED",
                            "ACCEPTED",
                            "DECLINED",
                            "CANCELED",
                            "CLOSED"
                        ]
                    },
                    "errorMessage": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "EDC not reachable"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "NotificationResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "maximum": 255,
                        "minimum": 0,
                        "maxLength": 255,
                        "type": "integer",
                        "format": "int64",
                        "example": 66
                    },
                    "title": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Title"
                    },
                    "status": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "CREATED",
                        "enum": [
                            "CREATED",
                            "SENT",
                            "RECEIVED",
                            "ACKNOWLEDGED",
                            "ACCEPTED",
                            "DECLINED",
                            "CANCELED",
                            "CLOSED"
                        ]
                    },
                    "description": {
                        "maxLength": 1000,
                        "minLength": 0,
                        "type": "string",
                        "example": "DescriptionText"
                    },
                    "createdBy": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "BPNL00000003AYRE"
                    },
                    "createdByName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                    },
                    "createdDate": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "example": "2023-02-21T21:27:10.734950Z"
                    },
                    "updatedDate": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "example": "2023-02-21T21:27:10.734950Z"
                    },
                    "assetIds": {
                        "maxItems": 1000,
                        "minItems": 0,
                        "type": "array",
                        "example": [
                            "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd",
                            "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70529fcbd",
                            "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70530fcbd"
                        ],
                        "items": {
                            "type": "string",
                            "example": "[\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd\",\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70529fcbd\",\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70530fcbd\"]"
                        }
                    },
                    "channel": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "SENDER",
                        "enum": [
                            "SENDER",
                            "RECEIVER"
                        ]
                    },
                    "sendTo": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "BPNL00000003AYRE"
                    },
                    "sendToName": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Tier C"
                    },
                    "severity": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "MINOR",
                        "enum": [
                            "MINOR",
                            "MAJOR",
                            "CRITICAL",
                            "LIFE-THREATENING"
                        ]
                    },
                    "type": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "example": "ALERT",
                        "enum": [
                            "ALERT",
                            "INVESTIGATION"
                        ]
                    },
                    "targetDate": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "example": "2099-02-21T21:27:10.734950Z"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NotificationMessageResponse"
                        }
                    }
                }
            },
            "CreateNotificationContractRequest": {
                "required": [
                    "notificationMethod",
                    "notificationType"
                ],
                "type": "object",
                "properties": {
                    "notificationType": {
                        "type": "string",
                        "enum": [
                            "QUALITY_INVESTIGATION",
                            "QUALITY_ALERT"
                        ]
                    },
                    "notificationMethod": {
                        "type": "string",
                        "enum": [
                            "RECEIVE",
                            "UPDATE",
                            "RESOLVE"
                        ]
                    }
                }
            },
            "CreateNotificationContractResponse": {
                "type": "object",
                "properties": {
                    "notificationAssetId": {
                        "type": "string",
                        "example": "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                    },
                    "accessPolicyId": {
                        "type": "string",
                        "example": "123"
                    },
                    "contractDefinitionId": {
                        "type": "string",
                        "example": "456"
                    }
                }
            },
            "ContractResponse": {
                "type": "object",
                "properties": {
                    "contractId": {
                        "maxLength": 255,
                        "type": "string",
                        "example": "66"
                    },
                    "counterpartyAddress": {
                        "maxLength": 255,
                        "type": "string",
                        "example": "https://trace-x-edc-e2e-a.dev.demo.catena-x.net/api/v1/dsp"
                    },
                    "creationDate": {
                        "maxLength": 255,
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-02-21T21:27:10.73495Z"
                    },
                    "endDate": {
                        "maxLength": 255,
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-02-21T21:27:10.73495Z"
                    },
                    "state": {
                        "maxLength": 255,
                        "type": "string",
                        "example": "FINALIZED"
                    },
                    "policy": {
                        "maxLength": 255,
                        "type": "string",
                        "example": "{\\\"@id\\\":\\\"eb0c8486-914a-4d36-84c0-b4971cbc52e4\\\",\\\"@type\\\":\\\"odrl:Set\\\",\\\"odrl:permission\\\":{\\\"odrl:target\\\":\\\"registry-asset\\\",\\\"odrl:action\\\":{\\\"odrl:type\\\":\\\"USE\\\"},\\\"odrl:constraint\\\":{\\\"odrl:or\\\":{\\\"odrl:leftOperand\\\":\\\"PURPOSE\\\",\\\"odrl:operator\\\":{\\\"@id\\\":\\\"odrl:eq\\\"},\\\"odrl:rightOperand\\\":\\\"ID 3.0 Trace\\\"}}},\\\"odrl:prohibition\\\":[],\\\"odrl:obligation\\\":[],\\\"odrl:target\\\":\\\"registry-asset\\\"}"
                    },
                    "contractType": {
                        "type": "string",
                        "enum": [
                            "ASSET_AS_PLANNED",
                            "ASSET_AS_BUILT",
                            "NOTIFICATION"
                        ]
                    },
                    "globalAssetId": {
                        "type": "string"
                    }
                }
            },
            "PageResultContractResponse": {
                "type": "object",
                "properties": {
                    "content": {
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array",
                        "description": "Content of PageResults",
                        "items": {
                            "$ref": "#/components/schemas/ContractResponse"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "pageCount": {
                        "type": "integer",
                        "format": "int32",
                        "example": 15
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32",
                        "example": 10
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    }
                }
            },
            "RegisterAssetRequest": {
                "required": [
                    "assetIds",
                    "policyId"
                ],
                "type": "object",
                "properties": {
                    "policyId": {
                        "type": "string",
                        "example": "a644a7cb-3de5-493b-9259-f01db315a46e"
                    },
                    "assetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ImportResponse": {
                "type": "object",
                "properties": {
                    "jobId": {
                        "type": "string"
                    },
                    "importStateMessage": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportStateMessage"
                        }
                    },
                    "validationResult": {
                        "$ref": "#/components/schemas/ValidationResponse"
                    }
                }
            },
            "ImportStateMessage": {
                "type": "object",
                "properties": {
                    "catenaXId": {
                        "type": "string"
                    },
                    "persistedOrUpdated": {
                        "type": "boolean"
                    }
                }
            },
            "ValidationResponse": {
                "type": "object",
                "properties": {
                    "validationErrors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SyncAssetsRequest": {
                "type": "object",
                "properties": {
                    "globalAssetIds": {
                        "maxItems": 100,
                        "minItems": 1,
                        "type": "array",
                        "example": [
                            "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                        ],
                        "items": {
                            "type": "string",
                            "example": "[\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd\"]"
                        }
                    }
                }
            },
            "SearchableAssetsRequest": {
                "required": [
                    "fieldName"
                ],
                "type": "object",
                "properties": {
                    "fieldName": {
                        "type": "string"
                    },
                    "startWith": {
                        "maxLength": 2147483647,
                        "minLength": 1,
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "owner": {
                        "type": "string",
                        "enum": [
                            "SUPPLIER",
                            "CUSTOMER",
                            "OWN",
                            "UNKNOWN"
                        ]
                    },
                    "inAssetIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "GetDetailInformationRequest": {
                "type": "object",
                "properties": {
                    "assetIds": {
                        "maxLength": 50,
                        "minLength": 1,
                        "maxItems": 50,
                        "minItems": 1,
                        "type": "array",
                        "example": [
                            "urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd"
                        ],
                        "items": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string",
                            "example": "[\"urn:uuid:ceb6b964-5779-49c1-b5e9-0ee70528fcbd\"]"
                        }
                    }
                }
            },
            "DescriptionsResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "urn:uuid:a4a26b9c-9460-4cc5-8645-85916b86adb0"
                    },
                    "idShort": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "assembly-part-relationship"
                    }
                }
            },
            "DetailAspectDataAsBuiltResponse": {
                "type": "object",
                "properties": {
                    "partId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "95657762-59"
                    },
                    "customerPartId": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "01697F7-65"
                    },
                    "nameAtCustomer": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "Door front-left"
                    },
                    "manufacturingCountry": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "DEU"
                    },
                    "manufacturingDate": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "2022-02-04T13:48:54Z"
                    }
                }
            },
            "DetailAspectDataAsPlannedResponse": {
                "type": "object",
                "properties": {
                    "validityPeriodFrom": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "2022-09-26T12:43:51.079Z"
                    },
                    "validityPeriodTo": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "20232-07-13T12:00:00.000Z"
                    }
                }
            },
            "DetailAspectDataResponse": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/DetailAspectDataAsBuiltResponse"
                    },
                    {
                        "$ref": "#/components/schemas/DetailAspectDataAsPlannedResponse"
                    },
                    {
                        "$ref": "#/components/schemas/PartSiteInformationAsPlannedResponse"
                    },
                    {
                        "$ref": "#/components/schemas/DetailAspectDataTractionBatteryCodeResponse"
                    }
                ]
            },
            "DetailAspectDataTractionBatteryCodeResponse": {
                "type": "object",
                "properties": {
                    "productType": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "pack"
                    },
                    "tractionBatteryCode": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "X12MCPM27KLPCLX2M2382320"
                    },
                    "subcomponents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DetailAspectDataTractionBatteryCodeSubcomponentResponse"
                        }
                    }
                }
            },
            "DetailAspectDataTractionBatteryCodeSubcomponentResponse": {
                "type": "object",
                "properties": {
                    "productType": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "pack"
                    },
                    "tractionBatteryCode": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "example": "X12MCPM27KLPCLX2M2382320"
                    }
                }
            },
            "DetailAspectModelResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "PART_SITE_INFORMATION_AS_PLANNED",
                        "enum": [
                            "AS_BUILT",
                            "AS_PLANNED",
                            "TRACTION_BATTERY_CODE",
                            "SINGLE_LEVEL_BOM_AS_BUILT",
                            "SINGLE_LEVEL_USAGE_AS_BUILT",
                            "SINGLE_LEVEL_BOM_AS_PLANNED",
                            "PART_SITE_INFORMATION_AS_PLANNED"
                        ]
                    },
                    "data": {
                        "$ref": "#/components/schemas/DetailAspectDataResponse"
                    }
                }
            },
            "PartSiteInformationAsPlannedResponse": {
                "type": "object",
                "properties": {
                    "functionValidUntil": {
                        "type": "string",
                        "example": "2025-02-08T04:30:48.000Z"
                    },
                    "function": {
                        "type": "string",
                        "example": "production"
                    },
                    "functionValidFrom": {
                        "type": "string",
                        "example": "2023-10-13T14:30:45+01:00"
                    },
                    "catenaXSiteId": {
                        "type": "string",
                        "example": "urn:uuid:0fed587c-7ab4-4597-9841-1718e9693003"
                    }
                }
            },
            "UpdateAssetRequest": {
                "required": [
                    "qualityType"
                ],
                "type": "object",
                "properties": {
                    "qualityType": {
                        "type": "string",
                        "example": "Ok",
                        "enum": [
                            "Ok",
                            "Minor",
                            "Major",
                            "Critical",
                            "LifeThreatening"
                        ]
                    }
                }
            },
            "IrsPolicyResponse": {
                "type": "object",
                "properties": {
                    "validUntil": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payload": {
                        "$ref": "#/components/schemas/Payload"
                    }
                },
                "example": [
                    {
                        "validUntil": "2025-12-12T23:59:59.999Z",
                        "payload": {
                            "@context": {
                                "@vocab": "https://w3id.org/edc/v0.0.1/ns/",
                                "edc": "https://w3id.org/edc/v0.0.1/ns/",
                                "cx-policy": "https://w3id.org/catenax/policy/",
                                "odrl": "http://www.w3.org/ns/odrl/2/"
                            },
                            "@id": "policy-id",
                            "policy": {
                                "odrl:permission": [
                                    {
                                        "odrl:action": "use",
                                        "odrl:constraint": {
                                            "odrl:and": [
                                                {
                                                    "odrl:leftOperand": "Membership",
                                                    "odrl:operator": {
                                                        "@id": "odrl:eq"
                                                    },
                                                    "odrl:rightOperand": "active"
                                                },
                                                {
                                                    "odrl:leftOperand": "PURPOSE",
                                                    "odrl:operator": {
                                                        "@id": "odrl:eq"
                                                    },
                                                    "odrl:rightOperand": "ID 3.1 Trace"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "ConstraintResponse": {
                "type": "object",
                "properties": {
                    "leftOperand": {
                        "type": "string",
                        "example": "PURPOSE"
                    },
                    "operatorTypeResponse": {
                        "type": "string",
                        "enum": [
                            "EQ",
                            "NEQ",
                            "LT",
                            "GT",
                            "IN",
                            "LTEQ",
                            "GTEQ",
                            "ISA",
                            "HASPART",
                            "ISPARTOF",
                            "ISONEOF",
                            "ISALLOF",
                            "ISNONEOF"
                        ]
                    },
                    "rightOperand": {
                        "type": "string",
                        "example": "ID Trace 3.1"
                    }
                }
            },
            "ConstraintsResponse": {
                "type": "object",
                "properties": {
                    "and": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConstraintResponse"
                        }
                    },
                    "or": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConstraintResponse"
                        }
                    }
                }
            },
            "PermissionResponse": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "example": "USE",
                        "enum": [
                            "ACCESS",
                            "USE"
                        ]
                    },
                    "constraints": {
                        "$ref": "#/components/schemas/ConstraintsResponse"
                    }
                }
            },
            "PolicyResponse": {
                "type": "object",
                "properties": {
                    "policyId": {
                        "type": "string",
                        "example": "5a00bb50-0253-405f-b9f1-1a3150b9d51d"
                    },
                    "createdOn": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "validUntil": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionResponse"
                        }
                    },
                    "businessPartnerNumber": {
                        "type": "string"
                    }
                }
            },
            "DashboardResponse": {
                "type": "object",
                "properties": {
                    "asBuiltCustomerParts": {
                        "type": "integer",
                        "format": "int64",
                        "example": 5
                    },
                    "asPlannedCustomerParts": {
                        "type": "integer",
                        "format": "int64",
                        "example": 10
                    },
                    "asBuiltSupplierParts": {
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "asPlannedSupplierParts": {
                        "type": "integer",
                        "format": "int64",
                        "example": 3
                    },
                    "asBuiltOwnParts": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "asPlannedOwnParts": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "myPartsWithOpenAlerts": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "myPartsWithOpenInvestigations": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "supplierPartsWithOpenAlerts": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "customerPartsWithOpenAlerts": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "supplierPartsWithOpenInvestigations": {
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "customerPartsWithOpenInvestigations": {
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "receivedActiveAlerts": {
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "receivedActiveInvestigations": {
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "sentActiveAlerts": {
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    },
                    "sentActiveInvestigations": {
                        "type": "integer",
                        "format": "int64",
                        "example": 2
                    }
                }
            },
            "ImportJobResponse": {
                "type": "object",
                "properties": {
                    "importJobStatus": {
                        "type": "string",
                        "enum": [
                            "INITIALIZING",
                            "RUNNING",
                            "ERROR",
                            "COMPLETED"
                        ]
                    },
                    "importId": {
                        "type": "string",
                        "example": "456a952e-05eb-40dc-a6f2-9c2cb9c1387f"
                    },
                    "startedOn": {
                        "maxLength": 50,
                        "type": "string",
                        "example": "2099-02-21T21:27:10.734950Z"
                    },
                    "completedOn": {
                        "maxLength": 50,
                        "type": "string",
                        "example": "2099-02-21T21:27:10.734950Z"
                    }
                }
            },
            "ImportReportResponse": {
                "type": "object",
                "properties": {
                    "importJob": {
                        "$ref": "#/components/schemas/ImportJobResponse"
                    },
                    "importedAsset": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportedAssetResponse"
                        }
                    }
                }
            },
            "ImportedAssetResponse": {
                "type": "object",
                "properties": {
                    "importState": {
                        "type": "string",
                        "enum": [
                            "TRANSIENT",
                            "PERSISTENT",
                            "ERROR",
                            "IN_SYNCHRONIZATION",
                            "PUBLISHED_TO_CORE_SERVICES",
                            "UNSET"
                        ]
                    },
                    "catenaxId": {
                        "type": "string",
                        "example": "urn:uuid:7eeeac86-7b69-444d-81e6-655d0f1513bd}"
                    },
                    "importedOn": {
                        "maxLength": 50,
                        "type": "string",
                        "example": "2099-02-21T21:27:10.734950Z"
                    },
                    "importMessage": {
                        "type": "string",
                        "example": "Asset created successfully in transient state."
                    }
                }
            }
        },
        "securitySchemes": {
            "oAuth2": {
                "type": "oauth2",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "https://example.com/api/oauth/token",
                        "scopes": {
                            "profile email": ""
                        }
                    }
                }
            }
        }
    }
}