#
#  Copyright (c) 2022, 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#  Copyright (c) 2022, 2023 ZF Friedrichshafen AG
#  Copyright (c) 2022, 2023 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#
replicaCount: 1

image:
  repository: tractusx/tx-traceability-foss
  pullPolicy: Always

##
## Image pull secret to create to obtain the container image
## Note: 'imagePullSecret.dockerconfigjson' takes precedence if configured together with 'imagePullSecrets'
##
imagePullSecret:
  dockerconfigjson: ""

##
## Existing image pull secret to use to obtain the container image
##
imagePullSecrets: []

serviceAccount:
  ##
  ## Specifies whether a service account should be created per release
  ##
  create: true
  ##
  ## Annotations to add to the service account
  ##
  annotations: {}
  ##
  ## The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  ##
  name: ""

podAnnotations: { }

springprofile: dev #will be set as dev

nameOverride: "traceability-foss-backend"
fullnameOverride: "traceability-foss-backend"

podSecurityContext:
  runAsUser: 10001
  seccompProfile:
    type: RuntimeDefault

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
securityContext:
  allowPrivilegeEscalation: false
  runAsNonRoot: true
  runAsUser: 10001
  runAsGroup: 3000
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false

service:
  type: ClusterIP
  port: 8080

autoscaling:
  enabled: false

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 512Mi

nodeSelector: {}

tolerations: []

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: DoesNotExist
          topologyKey: kubernetes.io/hostname

# Following Catena-X Helm Best Practices @url: https://catenax-ng.github.io/docs/kubernetes-basics/helm
# @url: https://github.com/helm/charts/blob/master/stable/nginx-ingress/values.yaml#L210
livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 80
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 80
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts: []
  tls: []

healthCheck:
  enabled: true #<healthCheck.enabled>

traceability:
  bpn: "CHANGEME" #<traceability.bpn>
  url: "" #<traceability.url>

datasource:
  url: jdbc:postgresql://traceability-foss-backend-postgresql:5432/trace
  username: "traceuser"
  password: "CHANGEME"  # <datasource.password>

oauth2:
  clientId: "CHANGEME" #<oauth2.clientId>
  clientSecret: "CHANGEME" #<oauth2.clientSecret>
  clientTokenUri: "https://changeme.com" #<oauth2.clientTokenUri>
  jwkSetUri: "https://changeme.com" #<oauth2.jwkSetUri>
  resourceClient: "CHANGEME" #<oauth2.resourceClient>

edc:
  apiKey: "" #<edc.apiKey>
  providerUrl: "" #<edc.providerUrl>
  callbackUrl: "https://replace.me"
  callbackUrlEdcClient: "https://replace.me"
  dataEndpointUrl: "https://replace.me"

discoveryfinder:
  baseUrl: "https://replace.me"

irs:
  baseUrl: "https://replace.me"
registry:
  urlWithPath: "https://replace.me"
portal:
  baseUrl: "https://replace.me"

config:
  allowedCorsOriginFirst: "https://replace.me"
  allowedCorsOriginSecond: "https://replace.me"

dependencies:
  enabled: false
  irs: CHANGEME #<irs-helm.nameOverride>
  edc: CHANGEME #<tractusx-connector.nameOverride>-controlplane
