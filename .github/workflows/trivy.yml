# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Trivy

on:
  pull_request:
    branches: main
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
  workflow_run:
    workflows: [Publish docker image]
    types: [completed]

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  JAVA_VERSION: 17
  COMMIT_SHA: ${{ github.sha }}

jobs:
  build-frontend:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    name: Build frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build an image from Dockerfile
        run: docker build -t docker.io${{ env.REGISTRY }}/${{ github.repository }}:fe_${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.11.2
        with:
          image-ref: 'docker.io${{ env.REGISTRY }}/${{ github.repository }}:fe_${{ github.sha }}'
          format: "sarif"
          exit-code: "1"
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  prepare-env-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tx-backend
    outputs:
      check_sha: ${{ steps.step1.outputs.check_sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{needs.prepare-env.outputs.check_sha}}
      - name: Set commit SHA to check
        id: step1
        run: |
          if [ -z "${{ github.event.workflow_run.head_sha }}" ]; then
            # use the value that is set when triggering the workflow manually
            echo "check_sha=$GITHUB_SHA" >> $GITHUB_OUTPUT
          else
            echo "check_sha=${{ github.event.workflow_run.head_sha }}" >> $GITHUB_OUTPUT
          fi

  analyze-config-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tx-backend
    if: always()
    needs: [prepare-env-backend]
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{needs.prepare-env.outputs.check_sha}}

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.11.2
        with:
          scan-type: "config"
          exit-code: "1"
          hide-progress: false
          format: "sarif"
          output: "trivy-results1.sarif"
          severity: "CRITICAL,HIGH"
          timeout: "10m0s"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: "trivy-results1.sarif"

  analyze-traceability-foss-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tx-backend
    if: always()
    needs: [prepare-env-backend]
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'temurin'
          cache: 'maven'

      - name: Locally build docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:trivy

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.11.2
        with:
          image-ref: ${{ env.REGISTRY }}/${{ github.repository }}:trivy
          trivyignores: "./.github/workflows/.trivyignore"
          format: "sarif"
          output: "trivy-results2.sarif"
          severity: "CRITICAL,HIGH"
          timeout: "10m0s"

      - name: Upload Trivy scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results2.sarif"
