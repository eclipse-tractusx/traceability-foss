#    Copyright (c) 2023 Contributors to the Eclipse Foundation
#
#    See the NOTICE file(s) distributed with this work for additional
#    information regarding copyright ownership.
#
#    This program and the accompanying materials are made available under the
#    terms of the Apache License, Version 2.0 which is available at
#    https://www.apache.org/licenses/LICENSE-2.0.
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.
#
#  SPDX-License-Identifier: Apache-2.0

name: Connect Pull Request with Github Issue Workflow
on:
  workflow_dispatch: # Trigger manually
  pull_request:
    types: [opened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest

      - name: Install Dependencies
        run: npm install github

      - name: Extract Numbers from PR Title and create description
        id: extract_numbers
        run: |

          PR_TITLE=$(echo "${{ github.event.pull_request.title }}" | tr '[:upper:]' '[:lower:]')
          if [[ $PR_TITLE == *xxx* ]]; then
            echo "skip workflow"
            echo "" > pr_description.txt
          else
            PR_NUMBER=$(echo "$PR_TITLE" | grep -Eo '[0-9]{3,}' | head -n 1)
            echo "resolves eclipse-tractusx/traceability-foss#$PR_NUMBER" > pr_description.txt
          fi

      - name: Update Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            const description = fs.readFileSync('pr_description.txt', 'utf8');

            const currentPR = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number
            });

            let combinedDescription;
            if (currentPR.data.body === null) {
              combinedDescription = description;
            } else {
              combinedDescription = currentPR.data.body + '\n\n' + description;
            }

            await github.rest.issues.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number,
            body: combinedDescription
            });
